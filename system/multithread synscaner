#! /usr/bin/env python

import threading
import Queue
import time
from scapy.all import *
from termcolor import colored


SHARE_Q = Queue.Queue()

class MyThread(threading.Thread) :
	
	def __init__(self, func) : 
		super(MyThread, self).__init__()
		self.func = func

	def run(self):
		self.func()

def scanner(port):
	ip = sys.argv[1]
	response = sr1(IP(dst=ip)/TCP(dport=port, flags="S"),verbose=False, timeout=.2)
	if response :
		if response[TCP].flags ==18:
			print colored("Port Number %d Status: OPEN"% port, "green") 
		else:
			print colored("Port Number %d Status: ClOSED"% port, "red")	
		

def worker():
	global SHARE_Q
	while not SHARE_Q.empty():		
		#pass
		item = SHARE_Q.get()
		scanner(item)
		time.sleep(1)
		SHARE_Q.task_done()
	else:
		print "all task finished"
		return


def main():
	global SHARE_Q
	threads = []
	
	for task in xrange(100):
		SHARE_Q.put(task)

	for i in xrange(1,10):
		thread = MyThread(worker)
		thread.start()
		threads.append(thread)
	for thread in threads:
		thread.join()

	SHARE_Q.join()

if __name__ == "__main__":
	main()
