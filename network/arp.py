#!/usr/bin/env python

#reference https://github.com/krig/send_arp.py/blob/master/send_arp.py

import socket
from struct import pack
from itertools import chain

raw = socket.socket(socket.PF_PACKET, socket.SOCK_RAW, socket.htons(0x0800))
raw.bind(('ens33', socket.htons(0x0800)))

bcast_mac = pack('!6B', *(0xFF,)*6)
socket_mac = pack('!6B', *(0x00,)*6)
ARPOP_REQUEST = pack('!H', 0x0001)
ARPOP_REPLY = pack('!H', 0x0002)
# Ethernet protocol type (=ARP)
ETHERNET_PROTOCOL_TYPE_ARP = pack('!H', 0x0806)
# ARP logical protocol type (Ethernet/IP)
ARP_PROTOCOL_TYPE_ETHERNET_IP = pack('!HHBB', 0x0001, 0x0800, 0x0006, 0x0004)

raw_sender_ip = "100.100.100.139"
raw_target_ip = "100.100.100.250"

sender_ip = pack('!4B', *[int(x) for x in raw_sender_ip.split('.')])
target_ip = pack('!4B', *[int(x) for x in raw_target_ip.split('.')])


ARP_FRAME = [
        # ## ETHERNET
        # destination MAC addr
        bcast_mac,
        # source MAC addr
        socket_mac,
        ETHERNET_PROTOCOL_TYPE_ARP,

        # ## ARP
        ARP_PROTOCOL_TYPE_ETHERNET_IP,
        # operation type
        ARPOP_REQUEST,
        # sender MAC addr
        socket_mac,
        # sender IP addr
        sender_ip,
        # target hardware addr
        bcast_mac,
        # target IP addr
        target_ip
]
#print ARP_FRAME
#print type(ARP_FRAME)
raw.send("".join(ARP_FRAME))
raw.close()
